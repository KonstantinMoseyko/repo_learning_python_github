
# 2.	Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
# a.	Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
# Внимание: использовать только арифметические операции!
# b.	К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
# сумма цифр которых делится нацело на 7.
# c.	* Решить задачу под пунктом b, не создавая новый список.


# инициализация переменных
list_of_odd_cubes = []
all_sum = 0  # в этой переменной будут хранится числа, сумма цифр которых делится нацело на 7

# Делаем список нечетных кубов
for i_odd in range(1, 1000):
    if i_odd % 2 != 0:
        list_of_odd_cubes.append(i_odd ** 3)
print(list_of_odd_cubes)

# перебираем элементы списка, используем функцию enumerate (распаковываем индексы и значения)
for index, value in enumerate(list_of_odd_cubes):
    digits_of_number = 0  # обнуляем сумму цифр для каждой итерации
    # Расчленяем value на цифры и проверям кратность семи, плючуем в all_sum трушные значения
    while value > 0:
        digits_of_number += value % 10
        value //= 10
    if digits_of_number % 7 == 0:
        all_sum += list_of_odd_cubes[index]
    # для выполнения сложной задачи прибавляем 17 к каждому index не создавая новый list
    list_of_odd_cubes[index] += 17

print(list_of_odd_cubes)
print(all_sum)
# 17485588610 контрольная сумма a.
# 15392909930 контрольная сумма b.


all_sum = 0  # обнуление переменной для получения нового значения на выходе
# перебираем элементы списка, используем функцию enumerate (распаковываем индексы и значения)
for index, value in enumerate(list_of_odd_cubes):
    digits_of_number = 0  # обнуляем сумму цифр для каждой итерации
    # Расчленяем value на цифры и проверям кратность семи, плючуем в all_sum трушные значения
    while value > 0:
        digits_of_number += value % 10
        value //= 10
    if digits_of_number % 7 == 0:
        all_sum += list_of_odd_cubes[index]

print(all_sum)
# 17485588610 контрольная сумма a.
# 15392909930 контрольная сумма b.
